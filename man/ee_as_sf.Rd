% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ee_as_sf.R
\name{ee_as_sf}
\alias{ee_as_sf}
\title{Convert an Earth Engine table in a sf object}
\usage{
ee_as_sf(
  x,
  dsn,
  overwrite = TRUE,
  crs = NULL,
  via = "getInfo",
  maxFeatures = 5000,
  container = "rgee_backup",
  selectors = NULL,
  quiet = FALSE
)
}
\arguments{
\item{x}{Earth Engine table (ee$FeatureCollection) to be converted into a sf
object.}

\item{dsn}{Character. Output filename; in case \code{dsn} is missing
\code{ee_as_sf} will create a shapefile file in tmp() directory.}

\item{overwrite}{Logical. Delete data source \code{dsn} before attempting
to write?.}

\item{crs}{Integer or character. coordinate reference system
for the EE table. If is NULL, \code{ee_as_sf} will take the CRS of
the first element.}

\item{via}{Character. Method to fetch data about the object. Multiple
options supported. See details.}

\item{maxFeatures}{Numeric. The maximum allowed number of features to
export (ignore if \code{via} is not set as "getInfo"). The task will fail
if the exported region covers more features. Defaults to 5000.}

\item{container}{Character. Name of the folder ('drive') or bucket ('gcs')
to be exported into (ignore if \code{via} is not defined as "drive" or
"gcs").}

\item{selectors}{The list of properties to include in the output, as a
list of strings or a comma-separated string. By default, all properties are
included.}

\item{quiet}{logical. Suppress info message}
}
\value{
An sf object.
}
\description{
Convert an Earth Engine table in a sf object
}
\details{
\code{ee_as_sf} supports the download of \code{ee$FeatureCollection},
\code{ee$Feature} and \code{ee$Geometry} by three different options:
"getInfo", "drive", and "gcs". When "getInfo" is set in the \code{via}
argument, \code{ee_as_sf} will make an REST call to retrieve
all the known information about the object. The advantage of use
"getInfo" is a direct and faster download. However, there is a limitation of
5000 features by request which makes it not recommendable for large
collections. Instead of "getInfo", the options: "drive" and "gcs" are
suitable for large collections since they use an intermediate container,
which may be Google Drive and Google Cloud Storage respectively. For getting
more information about exporting data from Earth Engine, take a look at the
\href{https://developers.google.com/earth-engine/exporting}{Google
Earth Engine Guide - Export data}.
}
\examples{
\dontrun{
library(rgee)

ee_Initialize(drive = TRUE, gcs = TRUE)

# Region of interest
roi <- ee$Geometry$Polygon(list(
  c(-122.275, 37.891),
  c(-122.275, 37.868),
  c(-122.240, 37.868),
  c(-122.240, 37.891)
))

# TIGER: US Census Blocks Dataset
blocks <- ee$FeatureCollection("TIGER/2010/Blocks")
subset <- blocks$filterBounds(roi)
sf_subset <- ee_as_sf(x = subset)
plot(sf_subset)

# Create Random points in Earth Engine
region <- ee$Geometry$Rectangle(-119.224, 34.669, -99.536, 50.064)
ee_help(ee$FeatureCollection$randomPoints)
ee_randomPoints <- ee$FeatureCollection$randomPoints(region, 100)

# Download via GetInfo
sf_randomPoints <- ee_as_sf(ee_randomPoints)
plot(sf_randomPoints)

# Download via drive
sf_randomPoints_drive <- ee_as_sf(
  x = ee_randomPoints,
  via = 'drive'
)

# Download via GCS
# sf_randomPoints_gcs <- ee_as_sf(
#   x = subset,
#   via = 'gcs',
#   container = 'rgee_dev' #GCS bucket name
# )
}
}
\concept{vector download functions}
